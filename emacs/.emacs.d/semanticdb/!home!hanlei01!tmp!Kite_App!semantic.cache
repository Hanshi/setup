;; Object Kite_App/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Kite_App/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("./make.cfg" include nil nil [998 1017])
            ("FPU" variable (:default-value ("neon-fp-armv8")) nil [1314 1335])
            ("CPU" variable (:default-value ("cortex-r52")) nil [1348 1366])
            ("bootcode_dir" variable (:default-value ("shared/bootcode")) nil [1397 1432])
            ("c_libraries_dir" variable (:default-value ("shared/c_libraries")) nil [1432 1470])
            ("GCC_TOOLCHAIN" variable (:default-value ("arm-none-eabi")) nil [1687 1720])
            ("GCC_ASM" variable (:default-value ("$(GCC_TOOLCHAIN)-as")) nil [1720 1759])
            ("GCC" variable (:default-value ("$(GCC_TOOLCHAIN)-gcc")) nil [1759 1799])
            ("GCC_LINKER_ASM" variable (:default-value ("$(GCC_TOOLCHAIN)-ld")) nil [1799 1838])
            ("GCC_LINKER_CSRC" variable (:default-value ("$(GCC_TOOLCHAIN)-gcc")) nil [1838 1878])
            ("GCC_ELF2BIN" variable (:default-value ("$(GCC_TOOLCHAIN)-objcopy")) nil [1878 1922])
            ("GCC_DISASS" variable (:default-value ("$(GCC_TOOLCHAIN)-objdump")) nil [1922 1966])
            ("GCC_TARGET" variable (:default-value ("-march=armv8-a" "-mfpu=$(FPU)")) nil [1981 2034])
            ("GCC_ASM_OPTS" variable (:default-value ("$(GCC_TARGET)" "--defsym" "GCC=1")) nil [2034 2088])
            ("GCC_OPTS" variable (:default-value ("$(GCC_TARGET)" "-mtune=$(CPU)" "-c" "-g" "-O3" "-DGCC" "-falign-functions=16" "-falign-jumps=8" "-falign-loops=8" "-fomit-frame-pointer" "-funroll-loops" "-DITERATIONS=20" "-I" "$(c_libraries_dir)")) nil [2088 2284])
            ("GCC_LINKER_OPTS_ASM" variable nil nil [2284 2309])
            ("GCC_LINKER_OPTS_CSRC" variable nil nil [2309 2334])
            ("GCC_LINKER_FILE" variable (:default-value ("-T" "link.ld")) nil [2334 2370])
            ("GCC_LINKER_FILE_FLASH" variable (:default-value ("-T" "link_flash.ld")) nil [2370 2412])
            ("GCC_ELF2BIN_OPTS" variable (:default-value ("-O" "binary")) nil [2412 2447])
            ("GCC_DISASS_OPTS" variable (:default-value ("--disassemble-all" "--disassemble-zeroes")) nil [2447 2511])
            ("ARMCC_ASM" variable (:default-value ("armclang")) nil [2732 2758])
            ("ARMCC_CC" variable (:default-value ("armclang")) nil [2758 2784])
            ("ARMCC_LINKER" variable (:default-value ("armlink")) nil [2784 2809])
            ("ARMCC_ELF2BIN" variable (:default-value ("fromelf")) nil [2809 2834])
            ("ARMCC_DISASS" variable (:default-value ("fromelf")) nil [2834 2859])
            ("ARMCC_TARGET" variable (:default-value ("--target=armv8r-arm-none-eabi" "-mcpu=$(CPU)" "-mfpu=$(FPU)")) nil [2860 2943])
            ("ARMCC_ASM_OPTS" variable (:default-value ("$(ARMCC_TARGET)" "-c")) nil [2943 2989])
            ("ARMCC_CC_OPTS" variable (:default-value ("$(ARMCC_TARGET)" "-marm" "-c" "-g" "-O3" "-fcommon" "-DITERATIONS=2000" "-I" "$(c_libraries_dir)" "-DRUN_ALL_CPUS")) nil [2989 3112])
            ("ARMCC_LINKER_OPTS" variable (:default-value ("--noremove" "--entry=vector_table" "--startup=bootcode" "--tool_variant=ult" "--cpu=kite" "--datacompressor" "off" "--diag_suppress" "L6314W")) nil [3112 3265])
            ("ARMCC_LINKER_FILE" variable (:default-value ("--scatter" "link.sc")) nil [3265 3310])
            ("ARMCC_LINKER_FILE_FLASH" variable (:default-value ("--scatter" "link_flash.sc")) nil [3310 3361])
            ("ARMCC_ELF2BIN_OPTS" variable (:default-value ("--bin" "--bincombined")) nil [3361 3408])
            ("ARMCC_DISASS_OPTS" variable (:default-value ("-cdes")) nil [3408 3441])
            ("BIN2HEX" variable (:default-value ("./bin2vhx.py")) nil [4203 4238])
            ("BIN2HEX_WIDTH" variable (:default-value ("--width=128")) nil [4238 4272])
            ("BIN2HEX_AXI_OPTS" variable (:default-value ("--base-addr=0x0" "--max-addr=0x00200000")) nil [4272 4332])
            ("BIN2HEX_FLASH_OPTS" variable (:default-value ("--base-addr=0x08000000" "--max-addr=0x09000000")) nil [4332 4399])
            ("all_directories" variable (:default-value ("$(subst /,,$(wildcard */))")) nil [4570 4615])
            ("tests" variable (:default-value ("$(filter-out shared% CVS,$(all_directories))")) nil [4615 4669])
            ("cc_tests" variable (:default-value ("saxpy_simd" "cache_miss" "coremark_v1.0" "dhrystone")) nil [4800 4865])
            ("GCC_SPECIAL_OPTS_DHRYSTONE" variable (:default-value ("$(subst -mfpu=$(FPU),, $(subst -funroll-loops,,$(GCC_OPTS)))" "-mword-relocations" "-fno-inline-functions" "-fno-inline")) nil [5020 5165])
            ("ARMCC_SPECIAL_OPTS_DHRYSTONE" variable (:default-value ("$(subst -loop-unroll,,$(ARMCC_CC_OPTS))" "-fno-inline-functions" "-fno-vectorize")) nil [5165 5273])
            ("GCC_SPECIAL_OPTS_COREMARK" variable (:default-value ("$(subst -mfpu=$(FPU),, $(subst -DITERATIONS=20,,$(GCC_OPTS)))" "-DITERATIONS=2" "-DPERFORMANCE_RUN=1" "-DUSE_DBASE")) nil [5337 5476])
            ("ARMCC_SPECIAL_OPTS_COREMARK" variable (:default-value ("$(subst -DITERATIONS=20,,$(ARMCC_CC_OPTS))" "-fno-vectorize" "-DITERATIONS=2" "-DPERFORMANCE_RUN=1" "-DUSE_DBASE")) nil [5476 5611])
            ("GCC_SPECIAL_OPTS_SAXPY" variable (:default-value ("$(subst -O3,, $(subst -DITERATIONS=20,,$(GCC_OPTS)))" "-DITERATIONS=2")) nil [5624 5717])
            ("ARMCC_SPECIAL_OPTS_SAXPY" variable (:default-value ("$(subst -DITERATIONS=20,,$(ARMCC_CC_OPTS))" "-fno-vectorize" "-DITERATIONS=2")) nil [5717 5817])
            ("COMPILER_INT" function (:arguments ("=" "$(strip $(COMPILER))")) nil [6030 6076])
            ("override" function (:arguments ("=" "$(strip $(COMPILER))")) nil [6030 6076])
            ("axi_dir" function (:arguments ("=" "$(COMPILER_INT)/elf")) nil [8058 8100])
            ("override" function (:arguments ("=" "$(COMPILER_INT)/elf")) nil [8058 8100])
            ("flash_dir" function (:arguments ("=" "$(COMPILER_INT)/elf_flash")) nil [8100 8148])
            ("override" function (:arguments ("=" "$(COMPILER_INT)/elf_flash")) nil [8100 8148])
            ("bootcode_srcs_s" variable (:default-value ("$(wildcard $(bootcode_dir)/*.s)")) nil [8178 8229])
            ("bootcode_objs_s" variable (:default-value ("$(patsubst %.s,%.o,$(bootcode_srcs_s))")) nil [8229 8287])
            ("librarietest_srcs_s_c" variable (:default-value ("$(wildcard $(c_libraries_dir)/*.c)")) nil [8322 8382])
            ("libraries_objs_c" variable (:default-value ("$(patsubst %.c,%.o,$(librarietest_srcs_s_c))")) nil [8382 8447])
            ("pmu_src_s_fixed" variable (:default-value ("$(wildcard $(c_libraries_dir)/*.s)")) nil [8461 8515])
            ("pmu_obj_s_fixed" variable (:default-value ("$(patsubst %.s,%.o,$(pmu_src_s_fixed))")) nil [8515 8573])
            ("test_srcs_s" variable (:default-value ("$(foreach test, $(tests), $(wildcard $(test)/src/*.s))")) nil [8758 8835])
            ("test_objs_s" variable (:default-value ("$(patsubst %.s, %.o, $(test_srcs_s))")) nil [8835 8894])
            ("test_srcs_c" variable (:default-value ("$(foreach test, $(tests), $(wildcard $(test)/src/*.c))")) nil [8919 8995])
            ("test_objs_c" variable (:default-value ("$(patsubst %.c, %.o, $(test_srcs_c))")) nil [8995 9053])
            ("other_tests_objs_c" variable (:default-value ("$(filter-out dhrystone% coremark% saxpy%, $(test_objs_c))")) nil [9053 9132])
            ("objs_dhrystone_c" variable (:default-value ("$(filter     dhrystone%, $(test_objs_c))")) nil [9132 9194])
            ("objs_coremark_c" variable (:default-value ("$(filter      coremark%, $(test_objs_c))")) nil [9194 9256])
            ("objs_saxpy_c" variable (:default-value ("$(filter         saxpy%, $(test_objs_c))")) nil [9256 9318])
            ("elfs_dir" variable (:default-value ("$(foreach test, $(tests), $(test)/$(axi_dir))")) nil [9347 9411])
            ("elfs" variable (:default-value ("$(foreach test, $(tests), $(test)/$(axi_dir)/test.elf)")) nil [9411 9484])
            ("elfs_asm" variable (:default-value ("$(filter-out $(foreach test, $(cc_tests), $(test)%), $(elfs))")) nil [9484 9564])
            ("elfs_cc" variable (:default-value ("$(filter     $(foreach test, $(cc_tests), $(test)%), $(elfs))")) nil [9564 9644])
            ("elfs_flash_dir" variable (:default-value ("$(foreach test, $(tests), $(test)/$(flash_dir))")) nil [9689 9755])
            ("elfs_flash" variable (:default-value ("$(foreach test, $(tests), $(test)/$(flash_dir)/test.elf)")) nil [9755 9830])
            ("elfs_flash_asm" variable (:default-value ("$(filter-out $(foreach test, $(cc_tests), $(test)%), $(elfs_flash))")) nil [9830 9916])
            ("elfs_flash_gcc" variable (:default-value ("$(filter     $(foreach test, $(cc_tests), $(test)%), $(elfs_flash))")) nil [9916 10002])
            ("bin" variable (:default-value ("$(foreach test, $(tests), $(test)/$(axi_dir)/memory_space.bin $(test)/$(flash_dir)/memory_space.bin)")) nil [10077 10196])
            ("hexes_axi_mem" variable (:default-value ("$(foreach test, $(tests), $(test)/$(axi_dir)/axi_memory.vhx   $(test)/$(flash_dir)/axi_memory.vhx)")) nil [10196 10313])
            ("hexes_flash_mem" variable (:default-value ("$(foreach test, $(tests), $(test)/$(flash_dir)/flash_memory.vhx)")) nil [10313 10396])
            ("disassemblies" variable (:default-value ("$(foreach test, $(tests), $(test)/$(axi_dir)/test.disass $(test)/$(flash_dir)/test.disass)")) nil [10427 10536])
            ("elfs_both_comp" variable (:default-value ("$(foreach test, $(tests), $(test)/armcc/elf/test.elf         $(test)/armcc/elf_flash/test.elf           $(test)/gcc/elf/test.elf         $(test)/gcc/elf_flash/test.elf)")) nil [10569 10763])
            ("bin_both_comp" variable (:default-value ("$(foreach test, $(tests), $(test)/armcc/elf/memory_space.bin $(test)/armcc/elf_flash/memory_space.bin   $(test)/gcc/elf/memory_space.bin $(test)/gcc/elf_flash/memory_space.bin)")) nil [10763 10965])
            ("hexes_axi_both_comp" variable (:default-value ("$(foreach test, $(tests), $(test)/armcc/elf/axi_memory.vhx   $(test)/armcc/elf_flash/axi_memory.vhx     $(test)/gcc/elf/axi_memory.vhx   $(test)/gcc/elf_flash/axi_memory.vhx)")) nil [10965 11165])
            ("hexes_flash_both_comp" variable (:default-value ("$(foreach test, $(tests),                                    $(test)/armcc/elf_flash/flash_memory.vhx                                    $(test)/gcc/elf_flash/flash_memory.vhx)")) nil [11165 11367])
            ("disassembles_both_comp" variable (:default-value ("$(foreach test, $(tests), $(test)/armcc/elf/test.disass      $(test)/armcc/elf_flash/test.disass        $(test)/gcc/elf/test.disass      $(test)/gcc/elf_flash/test.disass)")) nil [11367 11564])
            ("tests_clean" variable (:default-value ("$(foreach test, $(tests), $(test)_clean)")) nil [11866 11925])
            ("tests_distclean" variable (:default-value ("$(foreach test, $(tests), $(test)_distclean)")) nil [11925 11988])
            (".PHONY" function (:arguments ("default")) nil [12180 12196])
            ("help" function nil nil [12196 12362])
            ("default" function nil nil [12196 12362])
            (".PHONY" function (:arguments ("all")) nil [12552 12564])
            ("all" function (:arguments ("$(hexes_axi_mem)" "$(hexes_flash_mem)" "$(disassemblies)")) nil [12564 12623])
            ("$(hexes_axi_mem)" function (:arguments ("%/axi_memory.vhx:" "%/memory_space.bin")) nil [12822 12975])
            ("$(hexes_flash_mem)" function (:arguments ("%/flash_memory.vhx:" "%/memory_space.bin")) nil [12976 13136])
            ("$(bin)" function (:arguments ("%/memory_space.bin:" "%/test.elf")) nil [13137 13218])
            ("$(disassemblies)" function (:arguments ("%/test.disass:" "%/test.elf")) nil [13337 13466])
            (".SECONDEXPANSION" function nil nil [13688 13706])
            ("$(elfs_asm)" function (:arguments ("%/test.elf" ":" "$(bootcode_objs_s)" "$$(%_objs)")) nil [13706 13883])
            (".SECONDEXPANSION" function nil nil [13884 13902])
            ("$(elfs_flash_asm)" function (:arguments ("%_flash/test.elf" ":" "$(bootcode_objs_s)" "$$(%_objs)")) nil [13902 13995])
            (".SECONDEXPANSION" function nil nil [14148 14166])
            ("$(elfs_cc)" function (:arguments ("%/test.elf" ":" "$(bootcode_objs_s)" "$(pmu_obj_s)" "$(libraries_objs_c)" "$$(%_objs)")) nil [14166 14377])
            (".SECONDEXPANSION" function nil nil [14378 14396])
            ("$(elfs_flash_gcc)" function (:arguments ("%_flash/test.elf" ":" "$(bootcode_objs_s)" "$(pmu_obj_s)" "$(libraries_objs_c)" "$$(%_objs)")) nil [14396 14632])
            ("$(bootcode_objs_s)" function (:arguments ("%.o:" "%.s")) nil [14809 14938])
            ("$(test_objs_s)" function (:arguments ("%.o:" "%.s")) nil [14809 14938])
            ("$(libraries_objs_c)" function (:arguments ("%.o:" "%.c")) nil [14939 15074])
            ("$(other_tests_objs_c)" function (:arguments ("%.o:" "%.c")) nil [14939 15074])
            ("$(objs_dhrystone_c)" function (:arguments ("%.o:" "%.c")) nil [15121 15151])
            ("$(objs_coremark_c)" function (:arguments ("%.o:" "%.c")) nil [15300 15429])
            ("$(objs_saxpy_c)" function (:arguments ("%.o:" "%.c")) nil [15472 15626])
            (".PHONY" function (:arguments ("$(tests)")) nil [15811 15828])
            (".PHONY" function (:arguments ("$(tests_clean)")) nil [16359 16382])
            ("shared_clean" function (:arguments ("%_clean" ":" "%_distclean")) nil [16382 16639])
            ("$(tests_clean)" function (:arguments ("%_clean" ":" "%_distclean")) nil [16382 16639])
            (".PHONY" function (:arguments ("$(tests_distclean)")) nil [16640 16667])
            ("shared_distclean" function nil nil [16667 16919])
            ("$(tests_distclean)" function nil nil [16667 16919])
            (".PHONY" function (:arguments ("clean")) nil [16920 16934])
            ("clean" function (:arguments ("distclean")) nil [16934 17093])
            (".PHONY" function (:arguments ("distclean")) nil [17094 17112])
            ("distclean" function nil nil [17112 17267]))          
      :file "Makefile"
      :pointmax 17267
      :fsize 17266
      :lastmodtime '(22972 24928 420440 0)
      :unmatched-syntax nil)
    (semanticdb-table "make.cfg"
      :file "make.cfg"
      :fsize 2274
      :lastmodtime '(22972 16384 721496 0)))
  :file "!home!hanlei01!tmp!Kite_App!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
