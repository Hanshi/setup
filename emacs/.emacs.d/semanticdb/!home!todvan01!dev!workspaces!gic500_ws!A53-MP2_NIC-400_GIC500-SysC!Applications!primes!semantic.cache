;; Object primes/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "primes/"
  :tables
  (list
    (semanticdb-table "main.c"
      :major-mode 'c-mode
      :tags 
        '( ("stdio.h" include (:system-flag t) nil [180 198])
            ("armv8_aarch64_SystemTimer.h" include nil nil [199 237])
            ("armv8_aarch64_gicv3.h" include nil nil [238 270])
            ("dummymaster.h" include nil nil [271 295])
            ("DummyMaster" variable (:constant-flag t) nil [305 316])
            ("GITS_TRANSLATER" variable (:constant-flag t) nil [346 361])
            ("TEST_ATTR" variable (:constant-flag t) nil [387 396])
            ("flag" variable
               (:typemodifiers ("volatile")
                :type "unsigned int")
                nil [437 464])
            ("main" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [536 541]))                  
                :type "int")
                nil [527 9404])
            ("fiqHandler" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9483 9488]))                  
                :type "void")
                nil [9467 11910])
            ("irqHandler" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11989 11994]))                  
                :type "void")
                nil [11973 14356]))          
      :file "main.c"
      :pointmax 14418
      :fsize 14882
      :lastmodtime '(22803 17886 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("TEST_ATTR" . ((semantic-list "(DM_ATTR_DATA | DM_ATTR_NS)" 406 . 433)))
          ("GITS_TRANSLATER" . ((symbol "0x2F030040LL" 365 . 377)))
          ("DummyMaster" . ((semantic-list "(void*)" 318 . 325) (number "0xd0000000" 326 . 336)))
          )
)
    (semanticdb-table "armv8_aarch64_SystemTimer.h"
      :major-mode 'c-mode
      :tags 
        '( ("_ARMV8A_SYSTEM_TIMER_H" variable (:constant-flag t) nil [268 290])
            ("stdint.h" include (:system-flag t) nil [292 311])
            ("getCNTFRQ" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [531 536]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [512 537])
            ("setCNTFRQ" function
               (:prototype-flag t
                :arguments 
                  ( ("freq" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [648 662]))                  
                :type "void")
                nil [633 663])
            ("getPhysicalCount" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [979 984]))                  
                :type ("uint64_t" type (:type "class") nil nil))
                nil [953 985])
            ("getVirtualCount" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1084 1089]))                  
                :type ("uint64_t" type (:type "class") nil nil))
                nil [1059 1090])
            ("CNTKCTL_PCTEN" variable (:constant-flag t) nil [1272 1285])
            ("CNTKCTL_VCTEN" variable (:constant-flag t) nil [1417 1430])
            ("CNTKCTL_EVNTEN" variable (:constant-flag t) nil [1557 1571])
            ("CNTKCTL_EVNTDIR" variable (:constant-flag t) nil [1663 1678])
            ("getEL1Ctrl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1870 1875]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [1850 1876])
            ("setEL1Ctrl" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2008 2023]))                  
                :type "void")
                nil [1992 2024])
            ("CNTHCTL_CNTPCT" variable (:constant-flag t) nil [2216 2230])
            ("CNTHCTL_EVNTEN" variable (:constant-flag t) nil [2250 2264])
            ("CNTHCTL_EVNTDIR" variable (:constant-flag t) nil [2284 2299])
            ("getEL2Ctrl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2400 2405]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [2380 2406])
            ("setEL2Ctrl" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2538 2553]))                  
                :type "void")
                nil [2522 2554])
            ("getNSEL1PhysicalCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2872 2877]))                  
                :type ("uint64_t" type (:type "class") nil nil))
                nil [2837 2878])
            ("setNSEL1PhysicalCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3053 3068]))                  
                :type "void")
                nil [3022 3069])
            ("getNSEL1PhysicalTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3192 3197]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3156 3198])
            ("setNSEL1PhysicalTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3372 3387]))                  
                :type "void")
                nil [3340 3388])
            ("CNTP_CTL_ENABLE" variable (:constant-flag t) nil [3398 3413])
            ("CNTP_CTL_MASK" variable (:constant-flag t) nil [3432 3445])
            ("CNTP_CTL_STATUS" variable (:constant-flag t) nil [3466 3481])
            ("getNSEL1PhysicalTimerCtrl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3614 3619]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3579 3620])
            ("setNSEL1PhysicalTimerCtrl" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3793 3808]))                  
                :type "void")
                nil [3762 3809])
            ("getSEL1PhysicalCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4140 4145]))                  
                :type ("uint64_t" type (:type "class") nil nil))
                nil [4106 4146])
            ("setSEL1PhysicalCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4318 4333]))                  
                :type "void")
                nil [4288 4334])
            ("getSEL1PhysicalTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4453 4458]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4418 4459])
            ("setSEL1PhysicalTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4630 4645]))                  
                :type "void")
                nil [4599 4646])
            ("CNTPS_CTL_ENABLE" variable (:constant-flag t) nil [4656 4672])
            ("CNTPS_CTL_MASK" variable (:constant-flag t) nil [4691 4705])
            ("CNTPS_CTL_STATUS" variable (:constant-flag t) nil [4726 4742])
            ("getSEL1PhysicalTimerCtrl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4871 4876]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4837 4877])
            ("setSEL1PhysicalTimerCtrl" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5047 5062]))                  
                :type "void")
                nil [5017 5063])
            ("SCR_ENABLE_SECURE_EL1_ACCESS" variable (:constant-flag t) nil [5230 5258])
            ("SCR_DISABLE_SECURE_EL1_ACCESS" variable (:constant-flag t) nil [5272 5301])
            ("configSecureEL1TimerAccess" function
               (:prototype-flag t
                :arguments 
                  ( ("config" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5427 5443]))                  
                :type "void")
                nil [5395 5444])
            ("getEL1VirtualCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5738 5743]))                  
                :type ("uint64_t" type (:type "class") nil nil))
                nil [5706 5744])
            ("setEL1VirtualCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5896 5911]))                  
                :type "void")
                nil [5868 5912])
            ("getEL1VirtualTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6016 6021]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5983 6022])
            ("setEL1VirtualTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6173 6188]))                  
                :type "void")
                nil [6144 6189])
            ("CNTV_CTL_ENABLE" variable (:constant-flag t) nil [6199 6214])
            ("CNTV_CTL_MASK" variable (:constant-flag t) nil [6233 6246])
            ("CNTV_CTL_STATUS" variable (:constant-flag t) nil [6267 6282])
            ("getEL1VirtualTimerCtrl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6396 6401]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6364 6402])
            ("setEL1VirtualTimerCtrl" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6552 6567]))                  
                :type "void")
                nil [6524 6568])
            ("getVirtualCounterOffset" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6844 6849]))                  
                :type ("uint64_t" type (:type "class") nil nil))
                nil [6811 6850])
            ("setVirtualCounterOffset" function
               (:prototype-flag t
                :arguments 
                  ( ("offset" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7005 7021]))                  
                :type "void")
                nil [6976 7022])
            ("getEL2PhysicalCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7289 7294]))                  
                :type ("uint64_t" type (:type "class") nil nil))
                nil [7256 7295])
            ("setEL2PhysicalCompValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7459 7474]))                  
                :type "void")
                nil [7430 7475])
            ("getEL2PhysicalTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7586 7591]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7552 7592])
            ("CNTHP_CTL_ENABLE" variable (:constant-flag t) nil [7602 7618])
            ("CNTHP_CTL_MASK" variable (:constant-flag t) nil [7637 7651])
            ("CNTHP_CTL_STATUS" variable (:constant-flag t) nil [7672 7688])
            ("setEL2PhysicalTimerValue" function
               (:prototype-flag t
                :arguments 
                  ( ("value" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7861 7876]))                  
                :type "void")
                nil [7831 7877]))          
      :file "armv8_aarch64_SystemTimer.h"
      :pointmax 8053
      :fsize 8260
      :lastmodtime '(22766 18017 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("CNTHCTL_EVNTEN" . ((semantic-list "(1 << 2)" 2267 . 2275)))
          ("SCR_ENABLE_SECURE_EL1_ACCESS" . ((semantic-list "(1)" 5260 . 5263)))
          ("CNTV_CTL_MASK" . ((semantic-list "(1 << 1)" 6250 . 6258)))
          ("CNTHP_CTL_ENABLE" . ((semantic-list "(1 << 0)" 7620 . 7628)))
          ("CNTP_CTL_STATUS" . ((semantic-list "(1 << 2)" 3483 . 3491)))
          ("_ARMV8A_SYSTEM_TIMER_H")
          ("CNTKCTL_PCTEN" . ((semantic-list "(1 << 0)" 1289 . 1297)))
          ("CNTV_CTL_STATUS" . ((semantic-list "(1 << 2)" 6284 . 6292)))
          ("CNTHP_CTL_MASK" . ((semantic-list "(1 << 1)" 7655 . 7663)))
          ("CNTHCTL_CNTPCT" . ((semantic-list "(1 << 0)" 2233 . 2241)))
          ("CNTPS_CTL_MASK" . ((semantic-list "(1 << 1)" 4709 . 4717)))
          ("CNTP_CTL_ENABLE" . ((semantic-list "(1 << 0)" 3415 . 3423)))
          ("CNTPS_CTL_STATUS" . ((semantic-list "(1 << 2)" 4744 . 4752)))
          ("SCR_DISABLE_SECURE_EL1_ACCESS" . ((semantic-list "(0)" 5302 . 5305)))
          ("CNTHCTL_EVNTDIR" . ((semantic-list "(1 << 3)" 2301 . 2309)))
          ("CNTKCTL_VCTEN" . ((semantic-list "(1 << 1)" 1434 . 1442)))
          ("CNTKCTL_EVNTEN" . ((semantic-list "(1 << 2)" 1574 . 1582)))
          ("CNTKCTL_EVNTDIR" . ((semantic-list "(1 << 3)" 1680 . 1688)))
          ("CNTP_CTL_MASK" . ((semantic-list "(1 << 1)" 3449 . 3457)))
          ("CNTV_CTL_ENABLE" . ((semantic-list "(1 << 0)" 6216 . 6224)))
          ("CNTPS_CTL_ENABLE" . ((semantic-list "(1 << 0)" 4674 . 4682)))
          ("CNTHP_CTL_STATUS" . ((semantic-list "(1 << 2)" 7690 . 7698)))
          )
)
    (semanticdb-table "armv8_aarch64_gicv3.h"
      :file "armv8_aarch64_gicv3.h"
      :fsize 22205
      :lastmodtime '(22766 18017 0 0))
    (semanticdb-table "dummymaster.h"
      :file "dummymaster.h"
      :fsize 1558
      :lastmodtime '(22766 18017 0 0)))
  :file "!home!todvan01!dev!workspaces!gic500_ws!A53-MP2_NIC-400_GIC500-SysC!Applications!primes!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
